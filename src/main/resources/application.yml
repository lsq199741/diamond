server:
  servlet:
    context-path: /diamonds
  port: 8080
spring:
  redis:
    database: 0
    host: localhost
    port: 6379
    password: Lsqlsq123
    lettuce:
      pool:
        max-wait: -1
        max-active: 8
        max-idle: 8
        min-idle: 0
      shutdown-timeout: 100
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  datasource:
    dynamic:
      primary: master
      datasource:
        master:

          type: com.alibaba.druid.pool.DruidDataSource
          url: jdbc:mysql://localhost:3306/diamonds?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
          username: root
          password: Lsq123!@#
          driver-class-name: com.mysql.jdbc.Driver
      druid:
        # 初始化大小，最小，最大
        initial-size: 5
        min-idle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
        # 配置DruidStatFilter
        web-stat-filter:
          enabled: true
          url-pattern: "/*"
          exclusions: "*.js,*.gif,*.JPG,*.bmp,*.png,*.css,*.ico,/druid/*"
        # 配置DruidStatViewServlet
        stat-view-servlet:
          url-pattern: "/druid/*"
          # IP白名单(没有配置或者为空，则允许所有访问)
          allow: 127.0.0.1
          # IP黑名单 (存在共同时，deny优先于allow)
          #        deny: 192.168.1.73
          #  禁用HTML页面上的“Reset All”功能
          reset-enable: false
          # 登录名
          login-username: member
          # 登录密码
          login-password: 123456
  mail:
    username: 1246690778@qq.com
    password: ucxqpmqnnajcjaij
    host: smtp.qq.com
    default-encoding: utf-8
mail:
  fromMail:
    address: 1246690778@qq.com
mybatis-plus:
  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名
  mapper-locations: classpath*:mybatis/*.xml
  type-aliases-package: com.oasis.lessoncloud.model.entity
  # 该配置请和 typeAliasesPackage 一起使用，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象 。
  type-aliases-super-type: java.lang.Object
  global-config:
    id-type: 2
    field-strategy: 2
    db-column-underline: true
    refresh-mapper: true
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 驼峰下划线转换
    map-underscore-to-camel-case: true
    # 配置的缓存的全局开关
    cache-enabled: true
    # 延时加载的开关
    lazy-loading-enabled: true
    # 开启的话，延时加载一个属性时会加载该对象全部属性，否则按需加载属性
    multiple-result-sets-enabled: true
    use-generated-keys: true
    default-statement-timeout: 60
    default-fetch-size: 100
logging:
  config: classpath:log4j2.xml
  level:
    root: debug
    io.swagger.models.parameters.AbstractSerializableParameter: error
  # 自定义文件上传路径
web:
  upload-path: /Users/luoshuqiang/Desktop/upload/
#  upload-path: /root/upload/

